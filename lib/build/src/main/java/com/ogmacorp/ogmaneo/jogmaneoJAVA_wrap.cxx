/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#include <cmath>
#include <iostream>
#include <unordered_map>



#ifndef SWIGJAVA
#define SWIGJAVA
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


#include "system/SharedLib.h"
#include "system/ComputeSystem.h"
#include "system/ComputeProgram.h"
#include "neo/Hierarchy.h"
#include "neo/Architect.h"


#include <string>


#include <typeinfo>
#include <stdexcept>


#include <vector>
#include <stdexcept>

SWIGINTERN std::vector< float >::const_reference std_vector_Sl_float_Sg__get(std::vector< float > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_float_Sg__set(std::vector< float > *self,int i,std::vector< float >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN std::vector< ogmaneo::ValueField2D >::const_reference std_vector_Sl_ogmaneo_ValueField2D_Sg__get(std::vector< ogmaneo::ValueField2D > *self,int i){
                int size = int(self->size());
                if (i>=0 && i<size)
                    return (*self)[i];
                else
                    throw std::out_of_range("vector index out of range");
            }
SWIGINTERN void std_vector_Sl_ogmaneo_ValueField2D_Sg__set(std::vector< ogmaneo::ValueField2D > *self,int i,std::vector< ogmaneo::ValueField2D >::value_type const &val){
                int size = int(self->size());
                if (i>=0 && i<size)
                    (*self)[i] = val;
                else
                    throw std::out_of_range("vector index out of range");
            }

struct SWIG_null_deleter {
  void operator() (void const *) const {
  }
};
#define SWIG_NO_NULL_DELETER_0 , SWIG_null_deleter()
#define SWIG_NO_NULL_DELETER_1
#define SWIG_NO_NULL_DELETER_SWIG_POINTER_NEW
#define SWIG_NO_NULL_DELETER_SWIG_POINTER_OWN


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1vectorf_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< float > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::vector< float > *)new std::vector< float >();
  *(std::vector< float > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1vectorf_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< float >::size_type arg1 ;
  std::vector< float > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< float >::size_type)jarg1; 
  result = (std::vector< float > *)new std::vector< float >(arg1);
  *(std::vector< float > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorf_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< float > **)&jarg1; 
  result = ((std::vector< float > const *)arg1)->size();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorf_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< float > **)&jarg1; 
  result = ((std::vector< float > const *)arg1)->capacity();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorf_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< float > **)&jarg1; 
  arg2 = (std::vector< float >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT jboolean JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorf_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< float > **)&jarg1; 
  result = (bool)((std::vector< float > const *)arg1)->empty();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorf_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< float > **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorf_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  std::vector< float >::value_type *arg2 = 0 ;
  std::vector< float >::value_type temp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< float > **)&jarg1; 
  temp2 = (std::vector< float >::value_type)jarg2; 
  arg2 = &temp2; 
  (arg1)->push_back((std::vector< float >::value_type const &)*arg2);
}


SWIGEXPORT jfloat JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorf_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jfloat jresult = 0 ;
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  std::vector< float >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< float > **)&jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< float >::value_type *) &std_vector_Sl_float_Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return 0;
  }
  
  jresult = (jfloat)*result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorf_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jfloat jarg3) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  int arg2 ;
  std::vector< float >::value_type *arg3 = 0 ;
  std::vector< float >::value_type temp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< float > **)&jarg1; 
  arg2 = (int)jarg2; 
  temp3 = (std::vector< float >::value_type)jarg3; 
  arg3 = &temp3; 
  try {
    std_vector_Sl_float_Sg__set(arg1,arg2,(float const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return ;
  }
  
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_delete_1vectorf(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< float > *arg1 = (std::vector< float > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< float > **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1vectorvf_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  std::vector< ogmaneo::ValueField2D > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::vector< ogmaneo::ValueField2D > *)new std::vector< ogmaneo::ValueField2D >();
  *(std::vector< ogmaneo::ValueField2D > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1vectorvf_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  std::vector< ogmaneo::ValueField2D >::size_type arg1 ;
  std::vector< ogmaneo::ValueField2D > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (std::vector< ogmaneo::ValueField2D >::size_type)jarg1; 
  result = (std::vector< ogmaneo::ValueField2D > *)new std::vector< ogmaneo::ValueField2D >(arg1);
  *(std::vector< ogmaneo::ValueField2D > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorvf_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< ogmaneo::ValueField2D > *arg1 = (std::vector< ogmaneo::ValueField2D > *) 0 ;
  std::vector< ogmaneo::ValueField2D >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< ogmaneo::ValueField2D > **)&jarg1; 
  result = ((std::vector< ogmaneo::ValueField2D > const *)arg1)->size();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorvf_1capacity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  std::vector< ogmaneo::ValueField2D > *arg1 = (std::vector< ogmaneo::ValueField2D > *) 0 ;
  std::vector< ogmaneo::ValueField2D >::size_type result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< ogmaneo::ValueField2D > **)&jarg1; 
  result = ((std::vector< ogmaneo::ValueField2D > const *)arg1)->capacity();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorvf_1reserve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  std::vector< ogmaneo::ValueField2D > *arg1 = (std::vector< ogmaneo::ValueField2D > *) 0 ;
  std::vector< ogmaneo::ValueField2D >::size_type arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< ogmaneo::ValueField2D > **)&jarg1; 
  arg2 = (std::vector< ogmaneo::ValueField2D >::size_type)jarg2; 
  (arg1)->reserve(arg2);
}


SWIGEXPORT jboolean JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorvf_1isEmpty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  std::vector< ogmaneo::ValueField2D > *arg1 = (std::vector< ogmaneo::ValueField2D > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< ogmaneo::ValueField2D > **)&jarg1; 
  result = (bool)((std::vector< ogmaneo::ValueField2D > const *)arg1)->empty();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorvf_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  std::vector< ogmaneo::ValueField2D > *arg1 = (std::vector< ogmaneo::ValueField2D > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< ogmaneo::ValueField2D > **)&jarg1; 
  (arg1)->clear();
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorvf_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  std::vector< ogmaneo::ValueField2D > *arg1 = (std::vector< ogmaneo::ValueField2D > *) 0 ;
  std::vector< ogmaneo::ValueField2D >::value_type *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(std::vector< ogmaneo::ValueField2D > **)&jarg1; 
  arg2 = *(std::vector< ogmaneo::ValueField2D >::value_type **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< ogmaneo::ValueField2D >::value_type const & reference is null");
    return ;
  } 
  (arg1)->push_back((std::vector< ogmaneo::ValueField2D >::value_type const &)*arg2);
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorvf_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  std::vector< ogmaneo::ValueField2D > *arg1 = (std::vector< ogmaneo::ValueField2D > *) 0 ;
  int arg2 ;
  std::vector< ogmaneo::ValueField2D >::value_type *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(std::vector< ogmaneo::ValueField2D > **)&jarg1; 
  arg2 = (int)jarg2; 
  try {
    result = (std::vector< ogmaneo::ValueField2D >::value_type *) &std_vector_Sl_ogmaneo_ValueField2D_Sg__get(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return 0;
  }
  
  *(std::vector< ogmaneo::ValueField2D >::value_type **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_vectorvf_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  std::vector< ogmaneo::ValueField2D > *arg1 = (std::vector< ogmaneo::ValueField2D > *) 0 ;
  int arg2 ;
  std::vector< ogmaneo::ValueField2D >::value_type *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(std::vector< ogmaneo::ValueField2D > **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(std::vector< ogmaneo::ValueField2D >::value_type **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< ogmaneo::ValueField2D >::value_type const & reference is null");
    return ;
  } 
  try {
    std_vector_Sl_ogmaneo_ValueField2D_Sg__set(arg1,arg2,(ogmaneo::ValueField2D const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, (&_e)->what());
    return ;
  }
  
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_delete_1vectorvf(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  std::vector< ogmaneo::ValueField2D > *arg1 = (std::vector< ogmaneo::ValueField2D > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(std::vector< ogmaneo::ValueField2D > **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_CL_1HPP_1MINIMUM_1OPENCL_1VERSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(120);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_CL_1HPP_1TARGET_1OPENCL_1VERSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(120);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_SYS_1ALLOW_1CL_1GL_1CONTEXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ComputeSystem_1create_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jboolean jarg5) {
  jboolean jresult = 0 ;
  ogmaneo::ComputeSystem *arg1 = (ogmaneo::ComputeSystem *) 0 ;
  ogmaneo::ComputeSystem::DeviceType arg2 ;
  int arg3 ;
  int arg4 ;
  bool arg5 ;
  std::shared_ptr< ogmaneo::ComputeSystem > *smartarg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg1;
  arg1 = (ogmaneo::ComputeSystem *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (ogmaneo::ComputeSystem::DeviceType)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  result = (bool)(arg1)->create(arg2,arg3,arg4,arg5);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ComputeSystem_1create_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  jboolean jresult = 0 ;
  ogmaneo::ComputeSystem *arg1 = (ogmaneo::ComputeSystem *) 0 ;
  ogmaneo::ComputeSystem::DeviceType arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< ogmaneo::ComputeSystem > *smartarg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg1;
  arg1 = (ogmaneo::ComputeSystem *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (ogmaneo::ComputeSystem::DeviceType)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = (bool)(arg1)->create(arg2,arg3,arg4);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ComputeSystem_1create_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jboolean jresult = 0 ;
  ogmaneo::ComputeSystem *arg1 = (ogmaneo::ComputeSystem *) 0 ;
  ogmaneo::ComputeSystem::DeviceType arg2 ;
  int arg3 ;
  std::shared_ptr< ogmaneo::ComputeSystem > *smartarg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg1;
  arg1 = (ogmaneo::ComputeSystem *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (ogmaneo::ComputeSystem::DeviceType)jarg2; 
  arg3 = (int)jarg3; 
  result = (bool)(arg1)->create(arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ComputeSystem_1create_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jboolean jresult = 0 ;
  ogmaneo::ComputeSystem *arg1 = (ogmaneo::ComputeSystem *) 0 ;
  ogmaneo::ComputeSystem::DeviceType arg2 ;
  std::shared_ptr< ogmaneo::ComputeSystem > *smartarg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg1;
  arg1 = (ogmaneo::ComputeSystem *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (ogmaneo::ComputeSystem::DeviceType)jarg2; 
  result = (bool)(arg1)->create(arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ComputeSystem_1getPlatform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::ComputeSystem *arg1 = (ogmaneo::ComputeSystem *) 0 ;
  std::shared_ptr< ogmaneo::ComputeSystem > *smartarg1 = 0 ;
  cl::Platform *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg1;
  arg1 = (ogmaneo::ComputeSystem *)(smartarg1 ? smartarg1->get() : 0); 
  result = (cl::Platform *) &(arg1)->getPlatform();
  *(cl::Platform **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ComputeSystem_1getDevice(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::ComputeSystem *arg1 = (ogmaneo::ComputeSystem *) 0 ;
  std::shared_ptr< ogmaneo::ComputeSystem > *smartarg1 = 0 ;
  cl::Device *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg1;
  arg1 = (ogmaneo::ComputeSystem *)(smartarg1 ? smartarg1->get() : 0); 
  result = (cl::Device *) &(arg1)->getDevice();
  *(cl::Device **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ComputeSystem_1getContext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::ComputeSystem *arg1 = (ogmaneo::ComputeSystem *) 0 ;
  std::shared_ptr< ogmaneo::ComputeSystem > *smartarg1 = 0 ;
  cl::Context *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg1;
  arg1 = (ogmaneo::ComputeSystem *)(smartarg1 ? smartarg1->get() : 0); 
  result = (cl::Context *) &(arg1)->getContext();
  *(cl::Context **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ComputeSystem_1getQueue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::ComputeSystem *arg1 = (ogmaneo::ComputeSystem *) 0 ;
  std::shared_ptr< ogmaneo::ComputeSystem > *smartarg1 = 0 ;
  cl::CommandQueue *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg1;
  arg1 = (ogmaneo::ComputeSystem *)(smartarg1 ? smartarg1->get() : 0); 
  result = (cl::CommandQueue *) &(arg1)->getQueue();
  *(cl::CommandQueue **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1ComputeSystem(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ogmaneo::ComputeSystem *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ogmaneo::ComputeSystem *)new ogmaneo::ComputeSystem();
  
  *(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jresult = result ? new std::shared_ptr<  ogmaneo::ComputeSystem >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_delete_1ComputeSystem(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ogmaneo::ComputeSystem *arg1 = (ogmaneo::ComputeSystem *) 0 ;
  std::shared_ptr< ogmaneo::ComputeSystem > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg1;
  arg1 = (ogmaneo::ComputeSystem *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jboolean JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ComputeProgram_1loadFromFile(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  ogmaneo::ComputeProgram *arg1 = (ogmaneo::ComputeProgram *) 0 ;
  std::string *arg2 = 0 ;
  ogmaneo::ComputeSystem *arg3 = 0 ;
  std::shared_ptr< ogmaneo::ComputeProgram > *smartarg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeProgram > **)&jarg1;
  arg1 = (ogmaneo::ComputeProgram *)(smartarg1 ? smartarg1->get() : 0); 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  
  arg3 = (ogmaneo::ComputeSystem *)((*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg3) ? (*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg3)->get() : 0);
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::ComputeSystem & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->loadFromFile((std::string const &)*arg2,*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ComputeProgram_1loadHierarchyKernel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  ogmaneo::ComputeProgram *arg1 = (ogmaneo::ComputeProgram *) 0 ;
  ogmaneo::ComputeSystem *arg2 = 0 ;
  std::shared_ptr< ogmaneo::ComputeProgram > *smartarg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeProgram > **)&jarg1;
  arg1 = (ogmaneo::ComputeProgram *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (ogmaneo::ComputeSystem *)((*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg2) ? (*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::ComputeSystem & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->loadHierarchyKernel(*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ComputeProgram_1loadPredictorKernel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  ogmaneo::ComputeProgram *arg1 = (ogmaneo::ComputeProgram *) 0 ;
  ogmaneo::ComputeSystem *arg2 = 0 ;
  std::shared_ptr< ogmaneo::ComputeProgram > *smartarg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeProgram > **)&jarg1;
  arg1 = (ogmaneo::ComputeProgram *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (ogmaneo::ComputeSystem *)((*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg2) ? (*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::ComputeSystem & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->loadPredictorKernel(*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ComputeProgram_1loadSparseFeaturesKernel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jboolean jresult = 0 ;
  ogmaneo::ComputeProgram *arg1 = (ogmaneo::ComputeProgram *) 0 ;
  ogmaneo::ComputeSystem *arg2 = 0 ;
  ogmaneo::SparseFeaturesType arg3 ;
  std::shared_ptr< ogmaneo::ComputeProgram > *smartarg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeProgram > **)&jarg1;
  arg1 = (ogmaneo::ComputeProgram *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (ogmaneo::ComputeSystem *)((*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg2) ? (*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::ComputeSystem & reference is null");
    return 0;
  } 
  arg3 = (ogmaneo::SparseFeaturesType)jarg3; 
  result = (bool)(arg1)->loadSparseFeaturesKernel(*arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ComputeProgram_1getProgram(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::ComputeProgram *arg1 = (ogmaneo::ComputeProgram *) 0 ;
  std::shared_ptr< ogmaneo::ComputeProgram > *smartarg1 = 0 ;
  cl::Program *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeProgram > **)&jarg1;
  arg1 = (ogmaneo::ComputeProgram *)(smartarg1 ? smartarg1->get() : 0); 
  result = (cl::Program *) &(arg1)->getProgram();
  *(cl::Program **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1ComputeProgram(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ogmaneo::ComputeProgram *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ogmaneo::ComputeProgram *)new ogmaneo::ComputeProgram();
  
  *(std::shared_ptr<  ogmaneo::ComputeProgram > **)&jresult = result ? new std::shared_ptr<  ogmaneo::ComputeProgram >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_delete_1ComputeProgram(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ogmaneo::ComputeProgram *arg1 = (ogmaneo::ComputeProgram *) 0 ;
  std::shared_ptr< ogmaneo::ComputeProgram > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::ComputeProgram > **)&jarg1;
  arg1 = (ogmaneo::ComputeProgram *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Hierarchy_1activate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ogmaneo::Hierarchy *arg1 = (ogmaneo::Hierarchy *) 0 ;
  std::vector< ogmaneo::ValueField2D > *arg2 = 0 ;
  std::shared_ptr< ogmaneo::Hierarchy > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::Hierarchy > **)&jarg1;
  arg1 = (ogmaneo::Hierarchy *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = *(std::vector< ogmaneo::ValueField2D > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< ogmaneo::ValueField2D > & reference is null");
    return ;
  } 
  (arg1)->activate(*arg2);
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Hierarchy_1learn_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3) {
  ogmaneo::Hierarchy *arg1 = (ogmaneo::Hierarchy *) 0 ;
  std::vector< ogmaneo::ValueField2D > *arg2 = 0 ;
  float arg3 ;
  std::shared_ptr< ogmaneo::Hierarchy > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::Hierarchy > **)&jarg1;
  arg1 = (ogmaneo::Hierarchy *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = *(std::vector< ogmaneo::ValueField2D > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< ogmaneo::ValueField2D > & reference is null");
    return ;
  } 
  arg3 = (float)jarg3; 
  (arg1)->learn(*arg2,arg3);
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Hierarchy_1learn_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ogmaneo::Hierarchy *arg1 = (ogmaneo::Hierarchy *) 0 ;
  std::vector< ogmaneo::ValueField2D > *arg2 = 0 ;
  std::shared_ptr< ogmaneo::Hierarchy > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::Hierarchy > **)&jarg1;
  arg1 = (ogmaneo::Hierarchy *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = *(std::vector< ogmaneo::ValueField2D > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< ogmaneo::ValueField2D > & reference is null");
    return ;
  } 
  (arg1)->learn(*arg2);
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Hierarchy_1getInputImagesFeed(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::Hierarchy *arg1 = (ogmaneo::Hierarchy *) 0 ;
  std::shared_ptr< ogmaneo::Hierarchy const > *smartarg1 = 0 ;
  std::vector< cl::Image2D > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const ogmaneo::Hierarchy > **)&jarg1;
  arg1 = (ogmaneo::Hierarchy *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< cl::Image2D > *) &((ogmaneo::Hierarchy const *)arg1)->getInputImagesFeed();
  *(std::vector< cl::Image2D > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Hierarchy_1getInputImagesPredict(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::Hierarchy *arg1 = (ogmaneo::Hierarchy *) 0 ;
  std::shared_ptr< ogmaneo::Hierarchy const > *smartarg1 = 0 ;
  std::vector< cl::Image2D > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const ogmaneo::Hierarchy > **)&jarg1;
  arg1 = (ogmaneo::Hierarchy *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< cl::Image2D > *) &((ogmaneo::Hierarchy const *)arg1)->getInputImagesPredict();
  *(std::vector< cl::Image2D > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Hierarchy_1getPredictions(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::Hierarchy *arg1 = (ogmaneo::Hierarchy *) 0 ;
  std::shared_ptr< ogmaneo::Hierarchy > *smartarg1 = 0 ;
  std::vector< ogmaneo::ValueField2D > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::Hierarchy > **)&jarg1;
  arg1 = (ogmaneo::Hierarchy *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::vector< ogmaneo::ValueField2D > *) &(arg1)->getPredictions();
  *(std::vector< ogmaneo::ValueField2D > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Hierarchy_1getPredictor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::Hierarchy *arg1 = (ogmaneo::Hierarchy *) 0 ;
  std::shared_ptr< ogmaneo::Hierarchy > *smartarg1 = 0 ;
  ogmaneo::Predictor *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::Hierarchy > **)&jarg1;
  arg1 = (ogmaneo::Hierarchy *)(smartarg1 ? smartarg1->get() : 0); 
  result = (ogmaneo::Predictor *) &(arg1)->getPredictor();
  *(ogmaneo::Predictor **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Hierarchy_1readChunkStates(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  ogmaneo::Hierarchy *arg1 = (ogmaneo::Hierarchy *) 0 ;
  int arg2 ;
  ogmaneo::ValueField2D *arg3 = 0 ;
  std::shared_ptr< ogmaneo::Hierarchy > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::Hierarchy > **)&jarg1;
  arg1 = (ogmaneo::Hierarchy *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (int)jarg2; 
  arg3 = *(ogmaneo::ValueField2D **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::ValueField2D & reference is null");
    return ;
  } 
  (arg1)->readChunkStates(arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Hierarchy_1load(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jstring jarg3) {
  ogmaneo::Hierarchy *arg1 = (ogmaneo::Hierarchy *) 0 ;
  ogmaneo::ComputeSystem *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::shared_ptr< ogmaneo::Hierarchy > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::Hierarchy > **)&jarg1;
  arg1 = (ogmaneo::Hierarchy *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (ogmaneo::ComputeSystem *)((*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg2) ? (*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::ComputeSystem & reference is null");
    return ;
  } 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  (arg1)->load(*arg2,(std::string const &)*arg3);
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Hierarchy_1save(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jstring jarg3) {
  ogmaneo::Hierarchy *arg1 = (ogmaneo::Hierarchy *) 0 ;
  ogmaneo::ComputeSystem *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::shared_ptr< ogmaneo::Hierarchy > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::Hierarchy > **)&jarg1;
  arg1 = (ogmaneo::Hierarchy *)(smartarg1 ? smartarg1->get() : 0); 
  
  arg2 = (ogmaneo::ComputeSystem *)((*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg2) ? (*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg2)->get() : 0);
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::ComputeSystem & reference is null");
    return ;
  } 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  (arg1)->save(*arg2,(std::string const &)*arg3);
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1Hierarchy(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ogmaneo::Hierarchy *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ogmaneo::Hierarchy *)new ogmaneo::Hierarchy();
  
  *(std::shared_ptr<  ogmaneo::Hierarchy > **)&jresult = result ? new std::shared_ptr<  ogmaneo::Hierarchy >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_delete_1Hierarchy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ogmaneo::Hierarchy *arg1 = (ogmaneo::Hierarchy *) 0 ;
  std::shared_ptr< ogmaneo::Hierarchy > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::Hierarchy > **)&jarg1;
  arg1 = (ogmaneo::Hierarchy *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Vec2i_1x_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ogmaneo::Vec2i *arg1 = (ogmaneo::Vec2i *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Vec2i **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT jint JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Vec2i_1x_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ogmaneo::Vec2i *arg1 = (ogmaneo::Vec2i *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Vec2i **)&jarg1; 
  result = (int) ((arg1)->x);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Vec2i_1y_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ogmaneo::Vec2i *arg1 = (ogmaneo::Vec2i *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Vec2i **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT jint JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Vec2i_1y_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ogmaneo::Vec2i *arg1 = (ogmaneo::Vec2i *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Vec2i **)&jarg1; 
  result = (int) ((arg1)->y);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1Vec2i_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ogmaneo::Vec2i *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ogmaneo::Vec2i *)new ogmaneo::Vec2i();
  *(ogmaneo::Vec2i **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1Vec2i_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  ogmaneo::Vec2i *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = (ogmaneo::Vec2i *)new ogmaneo::Vec2i(arg1,arg2);
  *(ogmaneo::Vec2i **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_delete_1Vec2i(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ogmaneo::Vec2i *arg1 = (ogmaneo::Vec2i *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ogmaneo::Vec2i **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Vec2f_1x_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  ogmaneo::Vec2f *arg1 = (ogmaneo::Vec2f *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Vec2f **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Vec2f_1x_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  ogmaneo::Vec2f *arg1 = (ogmaneo::Vec2f *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Vec2f **)&jarg1; 
  result = (float) ((arg1)->x);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Vec2f_1y_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  ogmaneo::Vec2f *arg1 = (ogmaneo::Vec2f *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Vec2f **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Vec2f_1y_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  ogmaneo::Vec2f *arg1 = (ogmaneo::Vec2f *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Vec2f **)&jarg1; 
  result = (float) ((arg1)->y);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1Vec2f_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ogmaneo::Vec2f *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ogmaneo::Vec2f *)new ogmaneo::Vec2f();
  *(ogmaneo::Vec2f **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1Vec2f_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jfloat jarg1, jfloat jarg2) {
  jlong jresult = 0 ;
  float arg1 ;
  float arg2 ;
  ogmaneo::Vec2f *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  arg2 = (float)jarg2; 
  result = (ogmaneo::Vec2f *)new ogmaneo::Vec2f(arg1,arg2);
  *(ogmaneo::Vec2f **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1Vec2f_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  ogmaneo::Vec2f *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = (ogmaneo::Vec2f *)new ogmaneo::Vec2f(arg1,arg2);
  *(ogmaneo::Vec2f **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_delete_1Vec2f(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ogmaneo::Vec2f *arg1 = (ogmaneo::Vec2f *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ogmaneo::Vec2f **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1Resources_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ogmaneo::Resources *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ogmaneo::Resources *)new ogmaneo::Resources();
  
  *(std::shared_ptr<  ogmaneo::Resources > **)&jresult = result ? new std::shared_ptr<  ogmaneo::Resources >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1Resources_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  ogmaneo::ComputeSystem::DeviceType arg1 ;
  int arg2 ;
  int arg3 ;
  ogmaneo::Resources *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (ogmaneo::ComputeSystem::DeviceType)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (ogmaneo::Resources *)new ogmaneo::Resources(arg1,arg2,arg3);
  
  *(std::shared_ptr<  ogmaneo::Resources > **)&jresult = result ? new std::shared_ptr<  ogmaneo::Resources >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1Resources_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jlong jresult = 0 ;
  ogmaneo::ComputeSystem::DeviceType arg1 ;
  int arg2 ;
  ogmaneo::Resources *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (ogmaneo::ComputeSystem::DeviceType)jarg1; 
  arg2 = (int)jarg2; 
  result = (ogmaneo::Resources *)new ogmaneo::Resources(arg1,arg2);
  
  *(std::shared_ptr<  ogmaneo::Resources > **)&jresult = result ? new std::shared_ptr<  ogmaneo::Resources >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1Resources_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  ogmaneo::ComputeSystem::DeviceType arg1 ;
  ogmaneo::Resources *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (ogmaneo::ComputeSystem::DeviceType)jarg1; 
  result = (ogmaneo::Resources *)new ogmaneo::Resources(arg1);
  
  *(std::shared_ptr<  ogmaneo::Resources > **)&jresult = result ? new std::shared_ptr<  ogmaneo::Resources >(result SWIG_NO_NULL_DELETER_1) : 0;
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Resources_1create_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  ogmaneo::Resources *arg1 = (ogmaneo::Resources *) 0 ;
  ogmaneo::ComputeSystem::DeviceType arg2 ;
  int arg3 ;
  int arg4 ;
  std::shared_ptr< ogmaneo::Resources > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::Resources > **)&jarg1;
  arg1 = (ogmaneo::Resources *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (ogmaneo::ComputeSystem::DeviceType)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  (arg1)->create(arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Resources_1create_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  ogmaneo::Resources *arg1 = (ogmaneo::Resources *) 0 ;
  ogmaneo::ComputeSystem::DeviceType arg2 ;
  int arg3 ;
  std::shared_ptr< ogmaneo::Resources > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::Resources > **)&jarg1;
  arg1 = (ogmaneo::Resources *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (ogmaneo::ComputeSystem::DeviceType)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->create(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Resources_1create_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ogmaneo::Resources *arg1 = (ogmaneo::Resources *) 0 ;
  ogmaneo::ComputeSystem::DeviceType arg2 ;
  std::shared_ptr< ogmaneo::Resources > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::Resources > **)&jarg1;
  arg1 = (ogmaneo::Resources *)(smartarg1 ? smartarg1->get() : 0); 
  arg2 = (ogmaneo::ComputeSystem::DeviceType)jarg2; 
  (arg1)->create(arg2);
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Resources_1getComputeSystem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::Resources *arg1 = (ogmaneo::Resources *) 0 ;
  std::shared_ptr< ogmaneo::Resources const > *smartarg1 = 0 ;
  std::shared_ptr< ogmaneo::ComputeSystem > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const ogmaneo::Resources > **)&jarg1;
  arg1 = (ogmaneo::Resources *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::shared_ptr< ogmaneo::ComputeSystem > *) &((ogmaneo::Resources const *)arg1)->getComputeSystem();
  *(std::shared_ptr< ogmaneo::ComputeSystem > **)&jresult = *result ? new std::shared_ptr< ogmaneo::ComputeSystem >(*result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Resources_1getPrograms(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::Resources *arg1 = (ogmaneo::Resources *) 0 ;
  std::shared_ptr< ogmaneo::Resources const > *smartarg1 = 0 ;
  std::unordered_map< std::string,std::shared_ptr< ogmaneo::ComputeProgram > > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  
  smartarg1 = *(std::shared_ptr< const ogmaneo::Resources > **)&jarg1;
  arg1 = (ogmaneo::Resources *)(smartarg1 ? smartarg1->get() : 0); 
  result = (std::unordered_map< std::string,std::shared_ptr< ogmaneo::ComputeProgram > > *) &((ogmaneo::Resources const *)arg1)->getPrograms();
  *(std::unordered_map< std::string,std::shared_ptr< ogmaneo::ComputeProgram > > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_delete_1Resources(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ogmaneo::Resources *arg1 = (ogmaneo::Resources *) 0 ;
  std::shared_ptr< ogmaneo::Resources > *smartarg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  smartarg1 = *(std::shared_ptr<  ogmaneo::Resources > **)&jarg1;
  arg1 = (ogmaneo::Resources *)(smartarg1 ? smartarg1->get() : 0); 
  (void)arg1; delete smartarg1;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1ValueField2D_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ogmaneo::ValueField2D *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ogmaneo::ValueField2D *)new ogmaneo::ValueField2D();
  *(ogmaneo::ValueField2D **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1ValueField2D_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  jlong jresult = 0 ;
  ogmaneo::Vec2i *arg1 = 0 ;
  float arg2 ;
  ogmaneo::ValueField2D *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Vec2i **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::Vec2i const & reference is null");
    return 0;
  } 
  arg2 = (float)jarg2; 
  result = (ogmaneo::ValueField2D *)new ogmaneo::ValueField2D((ogmaneo::Vec2i const &)*arg1,arg2);
  *(ogmaneo::ValueField2D **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1ValueField2D_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::Vec2i *arg1 = 0 ;
  ogmaneo::ValueField2D *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Vec2i **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::Vec2i const & reference is null");
    return 0;
  } 
  result = (ogmaneo::ValueField2D *)new ogmaneo::ValueField2D((ogmaneo::Vec2i const &)*arg1);
  *(ogmaneo::ValueField2D **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ValueField2D_1create_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3) {
  ogmaneo::ValueField2D *arg1 = (ogmaneo::ValueField2D *) 0 ;
  ogmaneo::Vec2i *arg2 = 0 ;
  float arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ogmaneo::ValueField2D **)&jarg1; 
  arg2 = *(ogmaneo::Vec2i **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::Vec2i const & reference is null");
    return ;
  } 
  arg3 = (float)jarg3; 
  (arg1)->create((ogmaneo::Vec2i const &)*arg2,arg3);
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ValueField2D_1create_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ogmaneo::ValueField2D *arg1 = (ogmaneo::ValueField2D *) 0 ;
  ogmaneo::Vec2i *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ogmaneo::ValueField2D **)&jarg1; 
  arg2 = *(ogmaneo::Vec2i **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::Vec2i const & reference is null");
    return ;
  } 
  (arg1)->create((ogmaneo::Vec2i const &)*arg2);
}


SWIGEXPORT jfloat JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ValueField2D_1getValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jfloat jresult = 0 ;
  ogmaneo::ValueField2D *arg1 = (ogmaneo::ValueField2D *) 0 ;
  ogmaneo::Vec2i *arg2 = 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ogmaneo::ValueField2D **)&jarg1; 
  arg2 = *(ogmaneo::Vec2i **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::Vec2i const & reference is null");
    return 0;
  } 
  result = (float)((ogmaneo::ValueField2D const *)arg1)->getValue((ogmaneo::Vec2i const &)*arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ValueField2D_1setValue(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jfloat jarg3) {
  ogmaneo::ValueField2D *arg1 = (ogmaneo::ValueField2D *) 0 ;
  ogmaneo::Vec2i *arg2 = 0 ;
  float arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ogmaneo::ValueField2D **)&jarg1; 
  arg2 = *(ogmaneo::Vec2i **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::Vec2i const & reference is null");
    return ;
  } 
  arg3 = (float)jarg3; 
  (arg1)->setValue((ogmaneo::Vec2i const &)*arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ValueField2D_1getSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::ValueField2D *arg1 = (ogmaneo::ValueField2D *) 0 ;
  ogmaneo::Vec2i result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::ValueField2D **)&jarg1; 
  result = ((ogmaneo::ValueField2D const *)arg1)->getSize();
  *(ogmaneo::Vec2i **)&jresult = new ogmaneo::Vec2i((const ogmaneo::Vec2i &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ValueField2D_1getData(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::ValueField2D *arg1 = (ogmaneo::ValueField2D *) 0 ;
  std::vector< float > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::ValueField2D **)&jarg1; 
  result = (std::vector< float > *) &(arg1)->getData();
  *(std::vector< float > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ValueField2D_1setValues(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ogmaneo::ValueField2D *arg1 = (ogmaneo::ValueField2D *) 0 ;
  std::vector< float > *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ogmaneo::ValueField2D **)&jarg1; 
  arg2 = *(std::vector< float > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< float > const & reference is null");
    return ;
  } 
  (arg1)->setValues((std::vector< float > const &)*arg2);
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ValueField2D_1load(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  ogmaneo::ValueField2D *arg1 = (ogmaneo::ValueField2D *) 0 ;
  ogmaneo::schemas::ValueField2D *arg2 = (ogmaneo::schemas::ValueField2D *) 0 ;
  ogmaneo::ComputeSystem *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(ogmaneo::ValueField2D **)&jarg1; 
  arg2 = *(ogmaneo::schemas::ValueField2D **)&jarg2; 
  
  arg3 = (ogmaneo::ComputeSystem *)((*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg3) ? (*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg3)->get() : 0);
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::ComputeSystem & reference is null");
    return ;
  } 
  (arg1)->load((ogmaneo::schemas::ValueField2D const *)arg2,*arg3);
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ValueField2D_1save(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  ogmaneo::ValueField2D *arg1 = (ogmaneo::ValueField2D *) 0 ;
  flatbuffers::FlatBufferBuilder *arg2 = 0 ;
  ogmaneo::ComputeSystem *arg3 = 0 ;
  flatbuffers::Offset< ogmaneo::schemas::ValueField2D > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(ogmaneo::ValueField2D **)&jarg1; 
  arg2 = *(flatbuffers::FlatBufferBuilder **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "flatbuffers::FlatBufferBuilder & reference is null");
    return 0;
  } 
  
  arg3 = (ogmaneo::ComputeSystem *)((*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg3) ? (*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg3)->get() : 0);
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::ComputeSystem & reference is null");
    return 0;
  } 
  result = (arg1)->save(*arg2,*arg3);
  *(flatbuffers::Offset< ogmaneo::schemas::ValueField2D > **)&jresult = new flatbuffers::Offset< ogmaneo::schemas::ValueField2D >((const flatbuffers::Offset< ogmaneo::schemas::ValueField2D > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_delete_1ValueField2D(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ogmaneo::ValueField2D *arg1 = (ogmaneo::ValueField2D *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ogmaneo::ValueField2D **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jstring JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ParameterModifier_1_1boolTrue_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::string *) &ogmaneo::ParameterModifier::_boolTrue;
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ParameterModifier_1_1boolFalse_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  std::string *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (std::string *) &ogmaneo::ParameterModifier::_boolFalse;
  jresult = jenv->NewStringUTF(result->c_str()); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ParameterModifier_1setValue_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3) {
  jlong jresult = 0 ;
  ogmaneo::ParameterModifier *arg1 = (ogmaneo::ParameterModifier *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  ogmaneo::ParameterModifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::ParameterModifier **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  result = (ogmaneo::ParameterModifier *) &(arg1)->setValue((std::string const &)*arg2,(std::string const &)*arg3);
  *(ogmaneo::ParameterModifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ParameterModifier_1setValueBool(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jboolean jarg3) {
  jlong jresult = 0 ;
  ogmaneo::ParameterModifier *arg1 = (ogmaneo::ParameterModifier *) 0 ;
  std::string *arg2 = 0 ;
  bool arg3 ;
  ogmaneo::ParameterModifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::ParameterModifier **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = jarg3 ? true : false; 
  result = (ogmaneo::ParameterModifier *) &(arg1)->setValueBool((std::string const &)*arg2,arg3);
  *(ogmaneo::ParameterModifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ParameterModifier_1setValue_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jfloat jarg3) {
  jlong jresult = 0 ;
  ogmaneo::ParameterModifier *arg1 = (ogmaneo::ParameterModifier *) 0 ;
  std::string *arg2 = 0 ;
  float arg3 ;
  ogmaneo::ParameterModifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::ParameterModifier **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = (float)jarg3; 
  result = (ogmaneo::ParameterModifier *) &(arg1)->setValue((std::string const &)*arg2,arg3);
  *(ogmaneo::ParameterModifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ParameterModifier_1setValue_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  ogmaneo::ParameterModifier *arg1 = (ogmaneo::ParameterModifier *) 0 ;
  std::string *arg2 = 0 ;
  ogmaneo::Vec2i *arg3 = 0 ;
  ogmaneo::ParameterModifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(ogmaneo::ParameterModifier **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = *(ogmaneo::Vec2i **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::Vec2i const & reference is null");
    return 0;
  } 
  result = (ogmaneo::ParameterModifier *) &(arg1)->setValue((std::string const &)*arg2,(ogmaneo::Vec2i const &)*arg3);
  *(ogmaneo::ParameterModifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ParameterModifier_1setValue_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  ogmaneo::ParameterModifier *arg1 = (ogmaneo::ParameterModifier *) 0 ;
  std::string *arg2 = 0 ;
  ogmaneo::Vec2f *arg3 = 0 ;
  ogmaneo::ParameterModifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(ogmaneo::ParameterModifier **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = *(ogmaneo::Vec2f **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::Vec2f const & reference is null");
    return 0;
  } 
  result = (ogmaneo::ParameterModifier *) &(arg1)->setValue((std::string const &)*arg2,(ogmaneo::Vec2f const &)*arg3);
  *(ogmaneo::ParameterModifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ParameterModifier_1setValues(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  ogmaneo::ParameterModifier *arg1 = (ogmaneo::ParameterModifier *) 0 ;
  std::vector< std::pair< std::string,std::string > > *arg2 = 0 ;
  ogmaneo::ParameterModifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::ParameterModifier **)&jarg1; 
  arg2 = *(std::vector< std::pair< std::string,std::string > > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::vector< std::pair< std::string,std::string > > const & reference is null");
    return 0;
  } 
  result = (ogmaneo::ParameterModifier *) &(arg1)->setValues((std::vector< std::pair< std::string,std::string > > const &)*arg2);
  *(ogmaneo::ParameterModifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ParameterModifier_1parseVec2i(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  ogmaneo::Vec2i result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = ogmaneo::ParameterModifier::parseVec2i((std::string const &)*arg1);
  *(ogmaneo::Vec2i **)&jresult = new ogmaneo::Vec2i((const ogmaneo::Vec2i &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ParameterModifier_1parseVec2f(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  ogmaneo::Vec2f result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = ogmaneo::ParameterModifier::parseVec2f((std::string const &)*arg1);
  *(ogmaneo::Vec2f **)&jresult = new ogmaneo::Vec2f((const ogmaneo::Vec2f &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ParameterModifier_1parseBool(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jboolean jresult = 0 ;
  std::string *arg1 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  result = (bool)ogmaneo::ParameterModifier::parseBool((std::string const &)*arg1);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ParameterModifier_1load(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  ogmaneo::ParameterModifier *arg1 = (ogmaneo::ParameterModifier *) 0 ;
  ogmaneo::schemas::ParameterModifier *arg2 = (ogmaneo::schemas::ParameterModifier *) 0 ;
  ogmaneo::ComputeSystem *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(ogmaneo::ParameterModifier **)&jarg1; 
  arg2 = *(ogmaneo::schemas::ParameterModifier **)&jarg2; 
  
  arg3 = (ogmaneo::ComputeSystem *)((*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg3) ? (*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg3)->get() : 0);
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::ComputeSystem & reference is null");
    return ;
  } 
  (arg1)->load((ogmaneo::schemas::ParameterModifier const *)arg2,*arg3);
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_ParameterModifier_1save(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  ogmaneo::ParameterModifier *arg1 = (ogmaneo::ParameterModifier *) 0 ;
  flatbuffers::FlatBufferBuilder *arg2 = 0 ;
  ogmaneo::ComputeSystem *arg3 = 0 ;
  flatbuffers::Offset< ogmaneo::schemas::ParameterModifier > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(ogmaneo::ParameterModifier **)&jarg1; 
  arg2 = *(flatbuffers::FlatBufferBuilder **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "flatbuffers::FlatBufferBuilder & reference is null");
    return 0;
  } 
  
  arg3 = (ogmaneo::ComputeSystem *)((*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg3) ? (*(std::shared_ptr<  ogmaneo::ComputeSystem > **)&jarg3)->get() : 0);
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::ComputeSystem & reference is null");
    return 0;
  } 
  result = (arg1)->save(*arg2,*arg3);
  *(flatbuffers::Offset< ogmaneo::schemas::ParameterModifier > **)&jresult = new flatbuffers::Offset< ogmaneo::schemas::ParameterModifier >((const flatbuffers::Offset< ogmaneo::schemas::ParameterModifier > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1ParameterModifier(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ogmaneo::ParameterModifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ogmaneo::ParameterModifier *)new ogmaneo::ParameterModifier();
  *(ogmaneo::ParameterModifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_delete_1ParameterModifier(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ogmaneo::ParameterModifier *arg1 = (ogmaneo::ParameterModifier *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ogmaneo::ParameterModifier **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1InputLayer(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ogmaneo::InputLayer *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ogmaneo::InputLayer *)new ogmaneo::InputLayer();
  *(ogmaneo::InputLayer **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_delete_1InputLayer(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ogmaneo::InputLayer *arg1 = (ogmaneo::InputLayer *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ogmaneo::InputLayer **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1HigherLayer(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ogmaneo::HigherLayer *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ogmaneo::HigherLayer *)new ogmaneo::HigherLayer();
  *(ogmaneo::HigherLayer **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_delete_1HigherLayer(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ogmaneo::HigherLayer *arg1 = (ogmaneo::HigherLayer *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ogmaneo::HigherLayer **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Architect_1initialize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  ogmaneo::Architect *arg1 = (ogmaneo::Architect *) 0 ;
  unsigned int arg2 ;
  std::shared_ptr< ogmaneo::Resources > *arg3 = 0 ;
  std::shared_ptr< ogmaneo::Resources > tempnull3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(ogmaneo::Architect **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = jarg3 ? *(std::shared_ptr< ogmaneo::Resources > **)&jarg3 : &tempnull3; 
  (arg1)->initialize(arg2,(std::shared_ptr< ogmaneo::Resources > const &)*arg3);
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Architect_1addInputLayer_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  ogmaneo::Architect *arg1 = (ogmaneo::Architect *) 0 ;
  ogmaneo::Vec2i *arg2 = 0 ;
  bool arg3 ;
  ogmaneo::Vec2i arg4 ;
  ogmaneo::Vec2i *argp4 ;
  ogmaneo::ParameterModifier result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(ogmaneo::Architect **)&jarg1; 
  arg2 = *(ogmaneo::Vec2i **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::Vec2i const & reference is null");
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  argp4 = *(ogmaneo::Vec2i **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null ogmaneo::Vec2i");
    return 0;
  }
  arg4 = *argp4; 
  result = (arg1)->addInputLayer((ogmaneo::Vec2i const &)*arg2,arg3,arg4);
  *(ogmaneo::ParameterModifier **)&jresult = new ogmaneo::ParameterModifier((const ogmaneo::ParameterModifier &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Architect_1addInputLayer_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jboolean jarg3) {
  jlong jresult = 0 ;
  ogmaneo::Architect *arg1 = (ogmaneo::Architect *) 0 ;
  ogmaneo::Vec2i *arg2 = 0 ;
  bool arg3 ;
  ogmaneo::ParameterModifier result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ogmaneo::Architect **)&jarg1; 
  arg2 = *(ogmaneo::Vec2i **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::Vec2i const & reference is null");
    return 0;
  } 
  arg3 = jarg3 ? true : false; 
  result = (arg1)->addInputLayer((ogmaneo::Vec2i const &)*arg2,arg3);
  *(ogmaneo::ParameterModifier **)&jresult = new ogmaneo::ParameterModifier((const ogmaneo::ParameterModifier &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Architect_1addInputLayer_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  ogmaneo::Architect *arg1 = (ogmaneo::Architect *) 0 ;
  ogmaneo::Vec2i *arg2 = 0 ;
  ogmaneo::ParameterModifier result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ogmaneo::Architect **)&jarg1; 
  arg2 = *(ogmaneo::Vec2i **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::Vec2i const & reference is null");
    return 0;
  } 
  result = (arg1)->addInputLayer((ogmaneo::Vec2i const &)*arg2);
  *(ogmaneo::ParameterModifier **)&jresult = new ogmaneo::ParameterModifier((const ogmaneo::ParameterModifier &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Architect_1addHigherLayer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  ogmaneo::Architect *arg1 = (ogmaneo::Architect *) 0 ;
  ogmaneo::Vec2i *arg2 = 0 ;
  ogmaneo::SparseFeaturesType arg3 ;
  ogmaneo::ParameterModifier result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ogmaneo::Architect **)&jarg1; 
  arg2 = *(ogmaneo::Vec2i **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "ogmaneo::Vec2i const & reference is null");
    return 0;
  } 
  arg3 = (ogmaneo::SparseFeaturesType)jarg3; 
  result = (arg1)->addHigherLayer((ogmaneo::Vec2i const &)*arg2,arg3);
  *(ogmaneo::ParameterModifier **)&jresult = new ogmaneo::ParameterModifier((const ogmaneo::ParameterModifier &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Architect_1generateHierarchy_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ogmaneo::Architect *arg1 = (ogmaneo::Architect *) 0 ;
  std::shared_ptr< ogmaneo::Hierarchy > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Architect **)&jarg1; 
  result = (arg1)->generateHierarchy();
  *(std::shared_ptr< ogmaneo::Hierarchy > **)&jresult = result ? new std::shared_ptr< ogmaneo::Hierarchy >(result) : 0; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Architect_1generateHierarchy_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  ogmaneo::Architect *arg1 = (ogmaneo::Architect *) 0 ;
  std::unordered_map< std::string,std::string > *arg2 = 0 ;
  std::shared_ptr< ogmaneo::Hierarchy > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Architect **)&jarg1; 
  arg2 = *(std::unordered_map< std::string,std::string > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "std::unordered_map< std::string,std::string > & reference is null");
    return 0;
  } 
  result = (arg1)->generateHierarchy(*arg2);
  *(std::shared_ptr< ogmaneo::Hierarchy > **)&jresult = result ? new std::shared_ptr< ogmaneo::Hierarchy >(result) : 0; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Architect_1load(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ogmaneo::Architect *arg1 = (ogmaneo::Architect *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Architect **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->load((std::string const &)*arg2);
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_Architect_1save(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ogmaneo::Architect *arg1 = (ogmaneo::Architect *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ogmaneo::Architect **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  (arg1)->save((std::string const &)*arg2);
}


SWIGEXPORT jlong JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_new_1Architect(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ogmaneo::Architect *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ogmaneo::Architect *)new ogmaneo::Architect();
  *(ogmaneo::Architect **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_ogmacorp_ogmaneo_jogmaneoJNI_delete_1Architect(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ogmaneo::Architect *arg1 = (ogmaneo::Architect *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ogmaneo::Architect **)&jarg1; 
  delete arg1;
}


#ifdef __cplusplus
}
#endif

